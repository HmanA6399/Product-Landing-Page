* {
  margin: 0;
  padding: 0;
}

html {
  font-family: Lato, monospace;
}

body {
  background-color: rgb(205, 252, 252);
}

a {
  color: #000000;
  text-decoration: none;
}

ul {
  list-style: none;
}

/* I'd like to rebuild your navbar using flex because it gave me headache ! */
/* nav {
  overflow: hidden; Just because of the float
  background-color: rgb(93, 93, 255);
  box-sizing: border-box;
  width: 100%;
}

nav .logo {
  It's always better to wrap the img into a div and apply the styles to that div 
  display: inline-block;
  box-sizing: border-box;
  width: 30%;
  padding: 20px;
}

nav .logo img {
  max-width: 100%;
  margin: auto;
}

nav ul {
  float: right;
  box-sizing: border-box;
  width: 50%;
}

nav ul li {
  box-sizing: border-box;
  display: inline-block;
  box-sizing: border-box;
  margin: auto;
  width: 30%;
  min-height: 80px;
  text-align: center;
  font-size: 1.5vw;
  padding: 32px;
  transition: color 0.2s ease;
} */

nav {
  box-sizing: border-box;
  background-color: rgb(93, 93, 255);
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-around;
  width: 100%;
}

nav .logo {
  box-sizing: border-box;
  width: 30%;
  flex: 0 0 auto;
  padding: 20px;
}

nav .logo img {
  max-width: 100%;
}

nav ul {
  width: 60%;
  flex: 0 0 auto;
  display: flex;
  flex-flow: row-reverse;
}

nav ul li {
  box-sizing: border-box;
  width: 30%;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: color 0.2s ease;
}

nav ul li:hover {
  color: #eeeeee;
  background-color: #0000aa;
}

nav ul li a {
  color: inherit;
  /* so that we can change the color property of the 'a' by changing the 'li' which is its parent */
}

@media only screen and (max-width: 768px) {
  nav {
    text-align: center;
  }
  nav ul {
    display: none;
  }
  nav .logo {
    width: 50%;
  }
}

#article1 {
  text-align: center;
  background-color: rgb(205, 252, 252);
}

.header1 {
  margin-top: 15px;
}

input[type="text"] {
  margin-top: 15px;
  padding: 4px;
  padding-right: 60px;
  display: inline-block;
}

article input[type="submit"] {
  margin-top: 15px;
  display: inline-block;
  cursor: pointer;
  padding: 8px;
  padding-right: 20px;
  padding-left: 20px;
  color: black;
  background-color: rgb(255, 190, 13);
  border: none;
  font-size: 1rem;
  transition: all 1 ease-in-out;
}

input[type="submit"]:hover {
  transform: scale(1.03);
}

/* header img {
  width: 8%;
  margin-left: 15rem;
  padding-top: 3rem;
  margin-top: -1rem;
}

header h2,
header p {
  width: 55%;
  margin-left: 24rem;
  margin-top: -4.5rem;
}
header p {
  margin-top: 2rem;
}
header ul {
  background-color: rgb(205, 252, 252);
} */

/* Styling shapes : Always consider wraping elements into divs and styling the divs instead */

.shapes {
  width: 100%;
  margin: 20px 0;
}

.shapes .shape-item {
  width: 70%;
  margin: auto;
  display: flex;
  flex-direction: row nowrap;
  justify-content: center;
}

.shapes .shape-item .shape-item-pic {
  box-sizing: border-box;
  display: inline-flex;
  flex-direction: row-reverse;
  width: 10%;
  padding: 10px;
}

.shapes .shape-item .shape-item-pic img {
  margin: auto;
}

.shapes .shape-item .shape-item-desc {
  width: 70%;
  display: inline-block;
  padding: 20px;
  line-height: 30px;
}

/* Grid Styling */
.ord-grid {
  box-sizing: border-box;
  background-color: #cccccc;
  width: 100%;
  text-align: center;
  padding: 20px 80px;
}

.grid-item {
  box-sizing: border-box;
  min-height: 400px;
  border: 1px solid black;
  margin: 20px;
  display: inline-block;
  width: 28%;
}

.grid-item .item-header {
  box-sizing: border-box;
  margin-bottom: 10px;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 20px;
}

.grid-item .item-body {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.grid-item .item-price {
  box-sizing: border-box;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 20px;
  margin-top: 200px;
}

.jumbo-container {
  /* to separate the flex container style from the outer container style */
  width: 100%;
  background-color: lightyellow;
}

.flex-grid {
  /* border: 1px solid black; I always put borders while testing the style to make sure things are going fine */
  display: flex;
  flex-flow: row wrap;
  justify-content: space-around;
  align-content: center;
  text-align: center;
  width: 85%;
  margin: auto;
  padding: 0;
  box-sizing: border-box;
}

.flex-grid-item {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 28%;
  margin: 20px;
  box-sizing: border-box;
  min-height: 400px;
  border: 1px solid black;
}

.flex-grid-item .item-header {
  align-self: flex-start;
  box-sizing: border-box;
  margin-bottom: 10px;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 20px;
}

.flex-grid-item .item-body {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.flex-grid-item .item-price {
  align-self: flex-end;
  box-sizing: border-box;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 20px;
}

@media only screen and (max-width: 991px) and (min-width: 768px) {
  .grid-item {
    width: 40% !important; /* this '!important' is very important here, read about Specificity for more info */
  }
}

@media only screen and (max-width: 768px) {
  .grid-item {
    width: 100% !important;
    margin: 20px 0 !important;
  }
}

@media only screen and (max-width: 768px) {
  .flex-grid {
    flex-direction: column;
    width: 80%;
  }
  .flex-grid-item {
    width: 100% !important;
  }
}

#section {
  text-align: center;
  /* margin-top: 5rem;
  margin-bottom: 5rem; */
  /* In Box properties (border, padding, margin, width, ..) use '%' or 'px' instead of 'rem'. Why? Well, I guess you wouldn't like to deal with mathematical fractions in css '^_^ */
  margin: 20px 0;
  padding: 20px;
  background-color: rgb(205, 252, 252);
}

/* #section2 { /* Where is this in the HTML ? */
/* display: inline-flex; Why ?? It's just a block */
/* text-align: center;
  padding: 20px;
} */

.table-container {
  /* Same as before, wrap things inside divs and style them */
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
  background-color: rgb(205, 252, 252);
}

#table {
  /* margin-left: 24rem; */
  margin: auto; /* This perfectly centers your table */
  border-block-color: black;
}

.table-head {
  background-color: #aca5a5;
}

th,
td {
  text-align: center;
  padding: 10px;
}
tr {
  background-color: #f2f2f2;
}

.co[type="submit"] {
  display: flexbox;
  cursor: pointer;
  padding: 8px;
  padding-right: 20px;
  padding-left: 20px;
  color: black;
  background-color: rgb(255, 190, 13);
  border: none;
  font-size: 1rem;
  transition: all 1 ease-in-out; /* Try not to use 'all' in your transitions */
}

/* Staring from here I want you to lookup the links of CSS Flexbox and use it to rebuild your footer */
/* This is, I think, the best link for this case : https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */

#contact {
  background-color: #aca5a5;
  margin: auto;
  text-align: center;
  padding-top: 20px;
  padding-bottom: 20px;
}

div ul li {
  display: inline-block;
  padding-left: 2rem;
  padding-right: 2rem;
}

div ul li a {
  text-decoration: none;
  color: white;
  font-size: 1.2rem;
}

#footer {
  border-top: 1.4rem solid crimson;
  background-color: #aca5a5;
}

#footer p {
  text-align: center;
  padding-top: 1.2rem;
  padding-bottom: 1.2rem;
  width: 100%;
  display: inline-block;
  background-color: #aca5a5;
  margin-left: 0rem;
  color: white;
}
